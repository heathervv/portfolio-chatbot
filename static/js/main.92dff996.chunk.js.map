{"version":3,"sources":["config.js","images/settings.svg","images/bot.svg","images/email.svg","images/briefcase.svg","images/moon.svg","images/backgrounds/classic.jpg","images/backgrounds/xp.jpg","images/backgrounds/nasa.jpg","images/backgrounds/clouds.jpg","images/backgrounds/logo.jpg","images/backgrounds/vaporwave.jpg","components/clock.js","images/flag.svg","images/computer.svg","components/startbar.js","components/toolbar.js","components/message.js","components/messenger.js","components/program.js","components/work.js","components/contact.js","components/settings.js","components/shutDown.js","images/screensaver.gif","components/screensaver.js","images/resume.svg","App.js","index.js"],"names":["bot","require","default","email","briefcase","settings","icons","chat","url","alt","work","contact","shutdown","systemSettingsBackground","name","module","exports","apps","messenger","resumeLink","content","emailLink","linkedin","github","twitter","instagram","title","copy","initialResponse","changeInputResponse","free","options","systemSettings","background","theme","API","Clock","useState","time","setTime","startTime","i","today","Date","hh","getHours","m","getMinutes","dd","h","setTimeout","useEffect","className","StartBar","openApps","shutDown","start","openStart","minimizedApps","updateStartbar","currentlyActiveApp","openSettings","nextStatus","type","onClick","src","flag","Object","keys","map","app","toLowerCase","indexOf","e","computer","defaultProps","Toolbar","image","closeApp","component","notificationStyle","Message","user","Messenger","updateActiveApp","previouslyActiveApp","botName","username","Math","floor","random","dataView","messages","useRef","chatHistory","setChatHistory","isTyping","setIsTyping","inputValue","setInputValue","visible","links","curatedOptions","setCuratedOptions","updateHistory","message","prevChatHistory","current","scrollTop","scrollHeight","handleResponse","response","chatbotMessages","data","delay","length","followUp","handleError","sendMessage","event","directValue","keyCode","which","window","dataLayer","push","Axios","post","then","catch","defaultPosition","x","y","handle","cancel","ref","TransitionGroup","item","CSSTransition","timeout","classNames","link","replace","id","autoFocus","value","onChange","target","onKeyPress","option","Program","programName","programIcon","programRights","contentEditable","systemStyle","children","suppressContentEditableWarning","componentDecorator","href","text","key","rel","Work","Contact","Settings","activeSystemSettings","changeSystemSettings","ShutDown","restart","Screensaver","screensaverIsVisible","changeScreensaverVisibility","setScreensaver","visibility","document","originalDocTitle","onmousemove","clearTimeout","addEventListener","hidden","join","style","backgroundImage","graphic","programComponents","App","linkClickListener","tagName","elem","win","open","focus","openInNewTab","setShutDown","setOpenApps","setMinimizedApps","setOpenStart","setCurrentlyActiveApp","setPreviouslyActiveApp","existingBackground","localStorage","getItem","systemConfig","find","setItem","loadSystemBackground","existingTheme","loadSystemTheme","setSystemSettings","attachEvent","status","preventDefault","openApp","updatedMinimizedApps","splice","filter","a","minimizeWindow","index","triggerShutdown","resume","program","ProgramBlock","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.92dff996.chunk.js","sourcesContent":["const bot = require('./images/bot.svg').default;\nconst email = require('./images/email.svg').default;\nconst briefcase = require('./images/briefcase.svg').default;\nconst settings = require('./images/settings.svg').default;\nconst moon = require('./images/moon.svg').default;\nconst backgroundClassic = require('./images/backgrounds/classic.jpg').default;\nconst backgroundXp = require('./images/backgrounds/xp.jpg').default;\nconst backgroundNasa = require('./images/backgrounds/nasa.jpg').default;\nconst backgroundClouds = require('./images/backgrounds/clouds.jpg').default;\nconst backgroundLogo = require('./images/backgrounds/logo.jpg').default;\nconst backgroundVaporwave = require('./images/backgrounds/vaporwave.jpg').default;\n\nconst apps = {\n  messenger: 'Chat',\n  work: 'Work',\n  contact: 'Contact',\n  shutdown: 'Shutdown',\n  settings: 'Settings',\n};\n\nconst icons = {\n  chat: {\n    url: bot,\n    alt: 'Icon of bot',\n  },\n  work: {\n    url: briefcase,\n    alt: 'Icon of briefcase',\n  },\n  contact: {\n    url: email,\n    alt: 'Icon of email',\n  },\n  shutdown: {\n    url: moon,\n    alt: 'Icon of moon',\n  },\n  settings: {\n    url: settings,\n    alt: 'Icon of settings',\n  },\n};\n\nconst resumeLink = 'https://standardresume.co/heathervandervecht';\n\nconst contact = {\n  content: \"Let's chat! It's a pretty safe bet that you're awesome, and I'm always looking to meet awesome people. I'd love to grab a coffee, or even a beer if that's what you're into - just shoot me a message!\",\n  emailLink: 'mailto:heathervandervecht@gmail.com',\n  linkedin: 'https://linkedin.com/in/heathervandervecht',\n  github: 'http://github.com/heathervv',\n  twitter: 'http://twitter.com/_heathervv',\n  instagram: 'http://instagram.com/heathervv',\n};\n\nconst work = [\n  {\n    title: 'Dialogue',\n    url: '//dialogue.co/en/',\n    copy: 'Currently at Dialogue, working on the client stream. Currently a tech lead. Like most product companies, what I\\'m working on can change quickly, so if you\\'re curious to hear more about what I do here, shoot me an email!',\n  },\n  {\n    title: 'Opencare: Patient Growth',\n    url: '//opencare.com',\n    copy: 'I spent most of my time with Opencare on the Patient Growth team as a tech lead. The mission for this product line was to connect patients to top-tier dentists in their neighbourhood based on their wants/needs. Operating in both Canada and the United States, we built and maintained a marketing site (opencare.com), a patient app, and a practice app. There was *a lot* we managed to build, but I\\'m personally most proud of the completely rebuilt patient funnel (search.opencare.com/recommendation) which I built entirely in React to replace the original in AngularJS, and mentoring the team through improving QA processes, app accessibility, and feature scoping.',\n  },\n  {\n    title: 'Opencare: Revenue Cycle Management',\n    copy: 'This was a product line to help practices manage patient insurance before and after their appointments. This was done through an internal product that enabled the operations team to work through cases. When I joined this product line, the relationship between product and operations was strained - the product team was operating under a \"ship fast and often\" ethos, which, while great, often disrupted the operations team as they had tight timelines and had a low risk threshold for bugs and mid-day releases. So I focused on improving this communication-breakdown by refreshing the bug process and introducing functional reviews with key stakeholders before releases.',\n  },\n  {\n    title: 'Telus Digital Life',\n    url: '//telus.com/mobility/accessories',\n    copy: 'Nascent worked closely with TELUS to innovate the accessory space, and as a part of Nascent I co-lead the team that worked on this project. The main goal we worked towards with TELUS.com/accessories was how to bring the incredible in-store experience they\\'d already developed onto the website. It also presented some fantastic technical opportunities with features like real time inventory and a mobility-wide cart.',\n  },\n];\n\nconst initialResponse = \"Hi there, I'm HeatherBot - the digital version of Heather! Thanks for stopping by for a chat. You can ask me anything using the \\\"Free type\\\" button below, but for now I've gone ahead and given you some quick select options to help get you started. Go ahead and ask me something!\";\n\nconst changeInputResponse = {\n  free: 'Feel free to ask me whatever you want. 🚀',\n  options: 'A little guidance never hurt anybody. 🔮',\n};\n\n// TODO: update URLs to be correct\nconst systemSettingsBackground = [\n  {\n    name: 'Classic',\n    url: backgroundClassic,\n  },\n  {\n    name: 'XP',\n    url: backgroundXp,\n  },\n  {\n    name: 'Nasa',\n    url: backgroundNasa,\n  },\n  {\n    name: 'Clouds',\n    url: backgroundClouds,\n  },\n  {\n    name: 'Logo',\n    url: backgroundLogo,\n  },\n  {\n    name: 'Vaporwave',\n    url: backgroundVaporwave,\n  },\n];\n\nconst systemSettingsTheme = ['Light', 'Dark'];\n\nconst API = 'https://portfolio-chatbot-api.herokuapp.com/api/message';\n\nmodule.exports = {\n  apps,\n  icons,\n  resumeLink,\n  contact,\n  work,\n  initialResponse,\n  changeInputResponse,\n  systemSettings: {\n    background: systemSettingsBackground,\n    theme: systemSettingsTheme,\n  },\n  API,\n};\n","export default __webpack_public_path__ + \"static/media/settings.7d00555a.svg\";","export default __webpack_public_path__ + \"static/media/bot.6d47cd3f.svg\";","export default __webpack_public_path__ + \"static/media/email.cc80bc11.svg\";","export default __webpack_public_path__ + \"static/media/briefcase.3eba5d9d.svg\";","export default __webpack_public_path__ + \"static/media/moon.153a0b87.svg\";","export default __webpack_public_path__ + \"static/media/classic.ccda0798.jpg\";","export default __webpack_public_path__ + \"static/media/xp.266a4d6d.jpg\";","export default __webpack_public_path__ + \"static/media/nasa.4a78e12c.jpg\";","export default __webpack_public_path__ + \"static/media/clouds.b7aa799d.jpg\";","export default __webpack_public_path__ + \"static/media/logo.85f6a21b.jpg\";","export default __webpack_public_path__ + \"static/media/vaporwave.fe2c08af.jpg\";","import React, { useState, useEffect } from 'react';\n\nimport '../css/clock.css';\n\nconst Clock = () => {\n  const [time, setTime] = useState('');\n\n  const checkTime = (i) => (i < 10 ? `0${i}` : i);\n\n  const startTime = () => {\n    const today = new Date();\n    const hh = today.getHours();\n\n    let m = today.getMinutes();\n    m = checkTime(m);\n\n    let dd = 'AM';\n\n    let h = hh;\n    if (h >= 12) {\n      h = hh - 12;\n      dd = 'PM';\n    }\n    if (h === 0) {\n      h = 12;\n    }\n\n    setTimeout(startTime, 1000);\n\n    setTime(`${h}:${m} ${dd}`);\n  };\n\n  useEffect(() => {\n    startTime();\n  }, []);\n\n  return (\n    <div className=\"clock\">{time}</div>\n  );\n};\n\nexport default Clock;\n","export default __webpack_public_path__ + \"static/media/flag.9c8aceba.svg\";","export default __webpack_public_path__ + \"static/media/computer.525f57e2.svg\";","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { apps, icons } from '../config';\n\n// Components\nimport Clock from './clock';\n\nimport '../css/startbar.css';\n\n// Assets\nimport flag from '../images/flag.svg';\nimport computer from '../images/computer.svg';\nimport settings from '../images/settings.svg';\n\nconst StartBar = ({\n  openApps,\n  shutDown,\n  start,\n  openStart,\n  minimizedApps,\n  updateStartbar,\n  currentlyActiveApp,\n  openSettings,\n}) => {\n  const nextStatus = openStart ? 'close' : 'open';\n\n  return (\n    <>\n      <div className=\"startbar\">\n        <button\n          type=\"button\"\n          className={`start button ${openStart ? 'active' : ''}`}\n          onClick={() => start(nextStatus)}\n        >\n          <img src={flag} alt=\"flag\" />\n          <span>Start</span>\n        </button>\n        <div className=\"programs\">\n          {\n            Object.keys(apps).map((app) => {\n              const className = apps[app].toLowerCase();\n\n              if (app === 'shutdowncomputer') return null;\n\n              return (\n                <button\n                  key={`startbar-${className}`}\n                  type=\"button\"\n                  className={`\n                    startbar-button startbar-${className} button\n                    ${currentlyActiveApp.indexOf(className) > -1 ? 'active' : ''}\n                    ${openApps.indexOf(className) === -1\n                    ? 'closed-program'\n                    : ''\n                    } ${minimizedApps.indexOf(className) === -1\n                      ? 'minimized-program'\n                      : ''\n                    }`}\n                  onClick={() => updateStartbar(className)}\n                >\n                  <img src={icons[className].url} alt={icons[className].alt} />\n                  <span>{apps[app]}</span>\n                </button>\n              );\n            })\n          }\n        </div>\n        <Clock />\n      </div>\n      {\n        openStart\n        && (\n          <div className=\"start-cupboard visible\">\n            <button\n              type=\"button\"\n              className=\"settings\"\n              onClick={openSettings}\n            >\n              <img src={settings} alt=\"settings\" />\n              <span>Settings</span>\n            </button>\n            <button\n              type=\"button\"\n              className=\"shutdown\"\n              onClick={(e) => shutDown(e)}\n            >\n              <img src={computer} alt=\"computer\" />\n              <span>Shut Down...</span>\n            </button>\n          </div>\n        )\n      }\n    </>\n  );\n};\n\nStartBar.defaultProps = {\n  shutDown: () => { },\n  start: () => { },\n  updateStartbar: () => { },\n  openApps: [],\n  openStart: false,\n  minimizedApps: [],\n  currentlyActiveApp: '',\n  openSettings: () => { },\n};\n\nStartBar.propTypes = {\n  openApps: PropTypes.array,\n  shutDown: PropTypes.func,\n  start: PropTypes.func,\n  openStart: PropTypes.bool,\n  minimizedApps: PropTypes.array,\n  updateStartbar: PropTypes.func,\n  currentlyActiveApp: PropTypes.string,\n  openSettings: PropTypes.func,\n};\n\nexport default StartBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../css/toolbar.css';\n\nconst Toolbar = ({\n  image,\n  title,\n  closeApp,\n  component,\n  updateStartbar,\n  notificationStyle,\n}) => (\n  <div className=\"toolbar\">\n    <div className=\"title\">\n      <img src={image} alt={image} />\n      {' '}\n      <span>{title}</span>\n    </div>\n    <button\n      type=\"button\"\n      className={`button-small ${notificationStyle ? 'disabled' : ''}`}\n      onClick={(e) => closeApp(e, component)}\n    >\n      ×\n    </button>\n    {\n        !notificationStyle\n        && <button type=\"button\" className=\"button-small minimize\" onClick={() => updateStartbar(component, true)}>_</button>\n      }\n  </div>\n);\n\nToolbar.defaultProps = {\n  image: '',\n  title: '',\n  closeApp: () => {},\n  component: '',\n  updateStartbar: () => {},\n  notificationStyle: false,\n};\n\nToolbar.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  closeApp: PropTypes.func,\n  component: PropTypes.string,\n  updateStartbar: PropTypes.func,\n  notificationStyle: PropTypes.bool,\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Linkify from 'react-linkify';\n\nconst Message = ({ type, content, user }) => (\n  <div className={`message ${type}`}>\n    <span className=\"username\">{`<${user}>`}</span>\n    <Linkify>\n      {content}\n    </Linkify>\n  </div>\n);\n\nMessage.defaultProps = {\n  type: '',\n  content: '',\n  user: '',\n};\n\nMessage.propTypes = {\n  type: PropTypes.string,\n  content: PropTypes.string,\n  user: PropTypes.string,\n};\n\nexport default Message;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-autofocus */\n/* Event handler added to div for delight, not actual functionality */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Axios from 'axios';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Draggable from 'react-draggable';\nimport {\n  apps,\n  icons,\n  initialResponse,\n  changeInputResponse,\n  API,\n} from '../config';\n\n// Components\nimport Toolbar from './toolbar';\nimport Message from './message';\n\nimport '../css/messenger.css';\n\nconst Messenger = ({\n  updateActiveApp,\n  closeApp,\n  updateStartbar,\n  openApps,\n  minimizedApps,\n  currentlyActiveApp,\n  previouslyActiveApp,\n}) => {\n  const botName = 'HeatherBot';\n  const username = `Anon${Math.floor(Math.random() * (9999 - 1000) + 1000)}`;\n  const messenger = apps.messenger.toLowerCase();\n  const dataView = (openApps.indexOf(messenger) === -1 || minimizedApps.indexOf(messenger) !== -1) ? 'closed' : '';\n\n  const messages = useRef();\n\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isTyping, setIsTyping] = useState(true);\n  const [inputValue, setInputValue] = useState('');\n  const [curatedOptions, setCuratedOptions] = useState({\n    visible: false,\n    links: [\n      'Who are you?',\n      'Can I see your work?',\n      'What do you like to code in?',\n      'I\\'d like to get in touch with you',\n    ],\n  });\n\n  // This is the final frontier. All message-based functions end with a call to this one\n  // It updates the local array with whatever argument was passed to it\n  const updateHistory = (message, user, bot = false) => {\n    setChatHistory((prevChatHistory) => ([...prevChatHistory, { user, message, bot }]));\n  };\n\n  useEffect(() => {\n    // First message doesn't come from bot so we can introduce the app to the user\n    setTimeout(() => {\n      updateHistory(initialResponse, botName, true);\n      setIsTyping(false);\n      setCuratedOptions({\n        ...curatedOptions,\n        visible: true,\n      });\n    }, 2000);\n  }, []);\n\n  useEffect(() => {\n    // Always keep messenger window scrolled to last message\n    if (openApps.indexOf(apps.messenger.toLowerCase()) !== -1) {\n      messages.current.scrollTop = messages.current.scrollHeight;\n    }\n  }, [chatHistory, openApps]);\n\n  // This method listens to any successful response from the bot\n  const handleResponse = (response) => {\n    const chatbotMessages = response.data.response;\n    let delay = 1000;\n\n    for (let i = 0; i < chatbotMessages.length; i += 1) {\n      delay += i > 0 ? Math.floor(Math.random() * 2000) + 1000 : 0;\n\n      setTimeout(() => {\n        updateHistory(chatbotMessages[i], botName, true);\n\n        // If we're on the last response, trigger next step\n        if (i === chatbotMessages.length - 1) {\n          setIsTyping(false);\n\n          // If user has curated options turned on, check for any new ones from the bot\n          if (curatedOptions.visible && response.data.followUp) {\n            setCuratedOptions({\n              visible: true,\n              links: response.data.followUp,\n            });\n          }\n        }\n      }, delay);\n    }\n  };\n\n  // This method listens to any failed response from the bot\n  const handleError = () => {\n    updateHistory('Sorry, you\\'ve found a flaw in my code. I\\'ll take this opportunity to grow!', botName, true);\n    setIsTyping(false);\n  };\n\n  const sendMessage = (event, directValue = null) => {\n    if ((event && (event.keyCode === 13 || event.which === 13)) || directValue) {\n      const message = directValue || inputValue;\n\n      // Pass user message into state\n      updateHistory(message, username);\n\n      // Send user message to analytics\n      window.dataLayer.push({ event: 'dialogflow', message });\n\n      // Send off to bot\n      setIsTyping(true);\n      setInputValue('');\n\n      Axios.post(API, { message })\n        .then(handleResponse)\n        .catch(handleError);\n    }\n  };\n\n  // Toggle for user to use preselected messages or type their own to the bot\n  const changeInput = (option) => {\n    updateHistory(changeInputResponse[option], botName, true);\n\n    setCuratedOptions({\n      ...curatedOptions,\n      visible: !curatedOptions.visible,\n    });\n  };\n\n  return (\n    <Draggable\n      defaultPosition={{ x: Math.random() * (150 - 50) + 50, y: Math.random() * (150 - 50) + 50 }}\n      handle=\".toolbar\"\n      cancel=\".button-small\"\n    >\n      <div\n        className={`\n              messenger\n              program\n              ${currentlyActiveApp === messenger ? 'active' : ''}\n              ${previouslyActiveApp === messenger ? 'previous-active' : ''}\n            `}\n        onClick={(e) => updateActiveApp(e, messenger)}\n        data-view={dataView}\n      >\n        <Toolbar\n          closeApp={closeApp}\n          updateStartbar={updateStartbar}\n          component={messenger}\n          image={icons[apps.messenger.toLowerCase()].url}\n          title={apps.messenger}\n        />\n\n        <div className=\"messages content\" ref={messages}>\n          <TransitionGroup>\n            {\n                chatHistory.map((item) => (\n                  <CSSTransition key={item.message} timeout={500} classNames=\"message\">\n                    <Message\n                      key={item.message}\n                      type={item.bot ? 'sent' : 'received'}\n                      user={item.user}\n                      content={item.message}\n                    />\n                  </CSSTransition>\n                ))\n              }\n          </TransitionGroup>\n        </div>\n\n        <span className={`activeTyping ${isTyping ? 'visible' : ''}`}>Heather is typing...</span>\n\n        <div className={`userInput ${isTyping ? 'hidden' : ''}`}>\n          <div className=\"field\">\n            {\n                curatedOptions.visible ? (\n                  <div className=\"buttonWrapper\">\n                    <div>\n                      {\n                        curatedOptions.links.map((link) => (\n                          <button\n                            key={link.replace(/\\s+/g, '').toLowerCase()}\n                            type=\"button\"\n                            className=\"button-medium\"\n                            onClick={() => sendMessage(null, link)}\n                          >\n                            {link}\n                          </button>\n                        ))\n                      }\n                    </div>\n                  </div>\n                ) : (\n                  <input\n                    type=\"text\"\n                    id=\"messageField\"\n                    autoFocus\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    onKeyPress={sendMessage}\n                  />\n                )\n              }\n          </div>\n          <button\n            type=\"button\"\n            onClick={() => changeInput(curatedOptions.visible ? 'free' : 'options')}\n            className=\"button-medium option-toggle\"\n          >\n            {\n                curatedOptions.visible ? (\n                  'Free type'\n                ) : (\n                  'Curated'\n                )\n              }\n          </button>\n        </div>\n      </div>\n    </Draggable>\n  );\n};\n\nMessenger.defaultProps = {\n  updateActiveApp: () => {},\n  closeApp: () => {},\n  updateStartbar: () => {},\n  openApps: [],\n  minimizedApps: [],\n  currentlyActiveApp: '',\n  previouslyActiveApp: '',\n};\n\nMessenger.propTypes = {\n  updateActiveApp: PropTypes.func,\n  closeApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string,\n};\n\nexport default Messenger;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* Event handler added to div for delight, not actual functionality */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Draggable from 'react-draggable';\nimport Toolbar from './toolbar';\n\nconst Program = ({\n  notificationStyle,\n  programName,\n  openApps,\n  currentlyActiveApp,\n  previouslyActiveApp,\n  minimizedApps,\n  updateActiveApp,\n  updateStartbar,\n  programIcon,\n  programRights,\n  closeApp,\n  contentEditable,\n  systemStyle,\n  children,\n}) => (\n  <Draggable\n    defaultPosition={notificationStyle\n      ? {}\n      : { x: Math.random() * (150 - 50) + 50, y: Math.random() * (150 - 50) + 50 }}\n    handle=\".toolbar\"\n    cancel=\".button-small\"\n  >\n    <div\n      className={`${programName.toLowerCase()} program txt-file ${currentlyActiveApp === programName.toLowerCase() ? 'active' : ''} ${previouslyActiveApp === programName.toLowerCase() ? 'previous-active' : ''} ${notificationStyle ? 'notification' : ''} ${systemStyle ? 'system' : ''}`}\n      data-view={openApps.indexOf(programName.toLowerCase()) === -1 || minimizedApps.indexOf(programName.toLowerCase()) !== -1 ? 'closed' : ''}\n      onClick={() => updateActiveApp(null, programName.toLowerCase())}\n    >\n      <Toolbar\n        closeApp={closeApp}\n        updateStartbar={updateStartbar}\n        component={programName.toLowerCase()}\n        image={programIcon}\n        title={`${programName} ${programRights || ''}`}\n        notificationStyle={notificationStyle}\n      />\n      <div\n        className=\"content\"\n        contentEditable={contentEditable}\n        suppressContentEditableWarning\n      >\n        {children}\n      </div>\n    </div>\n  </Draggable>\n);\n\nProgram.propTypes = {\n  programName: PropTypes.string.isRequired,\n  programIcon: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  programRights: PropTypes.string,\n  contentEditable: PropTypes.bool,\n  updateActiveApp: PropTypes.func,\n  closeApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string,\n  notificationStyle: PropTypes.bool,\n  systemStyle: PropTypes.bool,\n};\n\nProgram.defaultProps = {\n  programRights: null,\n  contentEditable: false,\n  updateActiveApp: () => { },\n  closeApp: () => { },\n  updateStartbar: () => { },\n  openApps: [],\n  minimizedApps: [],\n  currentlyActiveApp: null,\n  previouslyActiveApp: null,\n  notificationStyle: false,\n  systemStyle: false,\n};\n\nexport default Program;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Linkify from 'react-linkify';\nimport { apps, icons, work } from '../config';\n\n// Components\nimport Program from './program';\n\nconst componentDecorator = (href, text, key) => (\n  <a href={href} key={key} target=\"_blank\" rel=\"noreferrer\">\n    {text}\n  </a>\n);\n\nconst Work = ({\n  updateActiveApp,\n  updateStartbar,\n  closeApp,\n  openApps,\n  minimizedApps,\n  currentlyActiveApp,\n  previouslyActiveApp,\n}) => (\n  <Program\n    programName={apps.work}\n    programRights=\"[Read Only]\"\n    programIcon={icons[apps.work.toLowerCase()].url}\n    updateActiveApp={updateActiveApp}\n    updateStartbar={updateStartbar}\n    closeApp={closeApp}\n    openApps={openApps}\n    minimizedApps={minimizedApps}\n    currentlyActiveApp={currentlyActiveApp}\n    previouslyActiveApp={previouslyActiveApp}\n  >\n    <Linkify componentDecorator={componentDecorator}>\n      {\n          work.map((item) => (\n            <div key={`item-${item.title}`}>\n              <h3>{item.url ? <a href={item.url} target=\"_blank\" rel=\"noreferrer\">{item.title}</a> : item.title}</h3>\n              <p>{item.copy}</p>\n            </div>\n          ))\n        }\n    </Linkify>\n  </Program>\n);\n\nWork.defaultProps = {\n  updateActiveApp: () => {},\n  updateStartbar: () => {},\n  closeApp: () => {},\n  openApps: [],\n  minimizedApps: [],\n  currentlyActiveApp: '',\n  previouslyActiveApp: '',\n};\n\nWork.propTypes = {\n  updateActiveApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  closeApp: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string,\n};\n\nexport default Work;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { apps, icons, contact } from '../config';\n\n// Components\nimport Program from './program';\n\nconst Contact = ({\n  updateActiveApp,\n  closeApp,\n  updateStartbar,\n  openApps,\n  minimizedApps,\n  currentlyActiveApp,\n  previouslyActiveApp,\n}) => (\n  <Program\n    programName={apps.contact}\n    programIcon={icons[apps.contact.toLowerCase()].url}\n    contentEditable\n    updateActiveApp={updateActiveApp}\n    updateStartbar={updateStartbar}\n    closeApp={closeApp}\n    openApps={openApps}\n    minimizedApps={minimizedApps}\n    currentlyActiveApp={currentlyActiveApp}\n    previouslyActiveApp={previouslyActiveApp}\n  >\n    {contact.content}\n    <br />\n    <br />\n    <>(Try writing here~)</>\n    <br />\n    <br />\n    <>==========================================</>\n    <br />\n    <br />\n    <a href={contact.emailLink}>{contact.emailLink.replace('mailto:', '')}</a>\n    {' '}\n    <br />\n    <a href={contact.linkedin}>LinkedIn</a>\n    {' '}\n    <br />\n    <a href={contact.github}>GitHub</a>\n    {' '}\n    <br />\n    <a href={contact.twitter}>Twitter</a>\n    {' '}\n    <br />\n    <a href={contact.instagram}>Instagram</a>\n  </Program>\n);\n\nContact.defaultProps = {\n  updateActiveApp: () => { },\n  closeApp: () => { },\n  updateStartbar: () => { },\n  openApps: [],\n  minimizedApps: [],\n  currentlyActiveApp: '',\n  previouslyActiveApp: '',\n};\n\nContact.propTypes = {\n  updateActiveApp: PropTypes.func,\n  closeApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { apps, icons, systemSettings } from '../config';\n\n// Components\nimport Program from './program';\n\nimport '../css/settings.css';\n\nconst Settings = ({\n  updateActiveApp,\n  updateStartbar,\n  closeApp,\n  openApps,\n  minimizedApps,\n  currentlyActiveApp,\n  previouslyActiveApp,\n  activeSystemSettings,\n  changeSystemSettings,\n}) => (\n  <Program\n    programName={apps.settings}\n    programIcon={icons[apps.settings.toLowerCase()].url}\n    updateActiveApp={updateActiveApp}\n    updateStartbar={updateStartbar}\n    closeApp={closeApp}\n    openApps={openApps}\n    minimizedApps={minimizedApps}\n    currentlyActiveApp={currentlyActiveApp}\n    previouslyActiveApp={previouslyActiveApp}\n    systemStyle\n  >\n    <div className=\"section background\">\n      <p className=\"sectionTitle\">Background</p>\n      <ul className=\"options\">\n        {\n            systemSettings.background.map((background) => {\n              let className = 'option';\n\n              if (background.name === activeSystemSettings.background.name) {\n                className += ' selected';\n              }\n\n              return (\n                <li\n                  key={background.name}\n                  className={className}\n                >\n                  <button type=\"button\" onClick={() => changeSystemSettings(background)}>{background.name}</button>\n                </li>\n              );\n            })\n          }\n      </ul>\n    </div>\n\n    <div className=\"section theme\">\n      <p className=\"sectionTitle\">Appearance</p>\n      <ul className=\"options\">\n        {\n            systemSettings.theme.map((theme) => {\n              let className = 'option';\n\n              if (theme === activeSystemSettings.theme) {\n                className += ' selected';\n              }\n\n              return (\n                <li\n                  key={theme}\n                  className={className}\n                >\n                  <button type=\"button\" onClick={() => changeSystemSettings(null, theme)}>{theme}</button>\n                </li>\n              );\n            })\n          }\n      </ul>\n    </div>\n\n    <div className=\"section attributions\">\n      <p className=\"sectionTitle\">Attributions</p>\n      <p>\n        Emoji artwork is provided by\n        {' '}\n        <a href=\"https://emojitwo.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Emojitwo</a>\n        , originally released as\n        {' '}\n        <a href=\"https://www.emojione.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Emojione 2.2</a>\n        {' '}\n        by\n        {' '}\n        <a href=\"http://www.ranks.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Ranks.com</a>\n        {' '}\n        with contributions from the Emojitwo community and is licensed under\n        {' '}\n        <a href=\"https://creativecommons.org/licenses/by/4.0/legalcode\" target=\"_blank\" rel=\"noopener noreferrer\">CC-BY 4.0.</a>\n      </p>\n    </div>\n  </Program>\n);\n\nSettings.defaultProps = {\n  updateActiveApp: () => {},\n  updateStartbar: () => {},\n  closeApp: () => {},\n  openApps: [],\n  minimizedApps: [],\n  currentlyActiveApp: '',\n  previouslyActiveApp: '',\n  activeSystemSettings: {},\n  changeSystemSettings: () => {},\n};\n\nSettings.propTypes = {\n  updateActiveApp: PropTypes.func,\n  updateStartbar: PropTypes.func,\n  closeApp: PropTypes.func,\n  openApps: PropTypes.array,\n  minimizedApps: PropTypes.array,\n  currentlyActiveApp: PropTypes.string,\n  previouslyActiveApp: PropTypes.string,\n  activeSystemSettings: PropTypes.object,\n  changeSystemSettings: PropTypes.func,\n};\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { apps, icons } from '../config';\n\n// Components\nimport Program from './program';\n\nconst ShutDown = ({ restart }) => (\n  <Program\n    currentlyActiveApp={apps.shutdown.toLowerCase()}\n    programName={apps.shutdown}\n    openApps={[apps.shutdown.toLowerCase()]}\n    programIcon={icons[apps.shutdown.toLowerCase()].url}\n    notificationStyle\n    systemStyle\n  >\n    It is now safe to turn off your computer.\n    <br />\n    <br />\n    <button type=\"button\" className=\"button-medium\" onClick={restart}>Restart</button>\n  </Program>\n);\n\nShutDown.propTypes = {\n  restart: PropTypes.func.isRequired,\n};\n\nexport default ShutDown;\n","export default __webpack_public_path__ + \"static/media/screensaver.a1fb69e4.gif\";","import React, { useState, useEffect } from 'react';\nimport graphic from '../images/screensaver.gif';\nimport '../css/screensaver.css';\n\nconst Screensaver = () => {\n  const [screensaverIsVisible, changeScreensaverVisibility] = useState(false);\n\n  const classNames = [\n    'screensaver',\n    screensaverIsVisible ? 'screensaver-visible' : 'screensaver-not-visible',\n  ];\n\n  const setScreensaver = (title, visibility) => {\n    document.title = title;\n    changeScreensaverVisibility(visibility);\n  };\n\n  useEffect(() => {\n    const originalDocTitle = document.title;\n    let timeout;\n\n    // Set screensaver if user stops moving for X seconds\n    document.onmousemove = () => {\n      clearTimeout(timeout);\n      setScreensaver(originalDocTitle, false);\n\n      timeout = setTimeout(() => {\n        setScreensaver('Zzz... 🌚', true);\n      }, 30000);\n    };\n\n    // Set screensaver if user changes tab\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden) {\n        setScreensaver('Zzz... 🌚', true);\n      } else {\n        setScreensaver(originalDocTitle, false);\n      }\n    });\n  }, []);\n\n  return (\n    <div className={classNames.join(' ')} style={{ backgroundImage: `url(${graphic})` }} />\n  );\n};\n\nexport default Screensaver;\n","export default __webpack_public_path__ + \"static/media/resume.5bc1bd74.svg\";","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport {\n  apps, icons, resumeLink, systemSettings as systemConfig,\n} from './config';\nimport StartBar from './components/startbar';\nimport Messenger from './components/messenger';\nimport Work from './components/work';\nimport Contact from './components/contact';\nimport Settings from './components/settings';\nimport ShutDown from './components/shutDown';\nimport Screensaver from './components/screensaver';\n\nimport resume from './images/resume.svg';\n\nimport './css/theme.css';\n\nconst programComponents = {\n  chat: Messenger,\n  work: Work,\n  contact: Contact,\n  settings: Settings,\n};\n\nconst App = () => {\n  const loadSystemBackground = () => {\n    const existingBackground = localStorage.getItem('background');\n\n    if (existingBackground) {\n      return systemConfig.background.find((background) => background.name === existingBackground);\n    }\n\n    localStorage.setItem('background', systemConfig.background[2].name);\n    return systemConfig.background[2];\n  };\n\n  const loadSystemTheme = () => {\n    const existingTheme = localStorage.getItem('theme');\n\n    if (existingTheme) {\n      return systemConfig.theme.find((theme) => theme === existingTheme);\n    }\n\n    localStorage.setItem('theme', systemConfig.theme[0]);\n    return systemConfig.theme[0];\n  };\n\n  const openInNewTab = (elem) => {\n    const win = window.open(elem, '_blank');\n\n    if (win) win.focus();\n  };\n\n  const linkClickListener = (e) => {\n    const event = window.e || e;\n\n    if (event.target.tagName === 'A') {\n      openInNewTab(event.target.href);\n    }\n  };\n\n  const [shutDown, setShutDown] = useState(false);\n  const [openApps, setOpenApps] = useState([apps.messenger.toLowerCase()]);\n  const [minimizedApps, setMinimizedApps] = useState([]);\n  const [openStart, setOpenStart] = useState(false);\n  const [currentlyActiveApp, setCurrentlyActiveApp] = useState(apps.messenger.toLowerCase());\n  const [previouslyActiveApp, setPreviouslyActiveApp] = useState('');\n  const [systemSettings, setSystemSettings] = useState({\n    background: loadSystemBackground(),\n    theme: loadSystemTheme(),\n  });\n\n  useEffect(() => {\n    if (document.addEventListener) {\n      document.addEventListener('click', linkClickListener, false);\n    } else {\n      document.attachEvent('onclick', linkClickListener);\n    }\n  }, []);\n\n  const start = (status) => {\n    setOpenStart(status !== 'close');\n  };\n\n  const updateActiveApp = (e, component) => {\n    if (e) e.preventDefault();\n\n    if (component === currentlyActiveApp) return;\n\n    setPreviouslyActiveApp(currentlyActiveApp);\n    setCurrentlyActiveApp(component);\n  };\n\n  const openApp = (e, component) => {\n    if (e) e.preventDefault();\n\n    const updatedMinimizedApps = [...minimizedApps];\n    if (updatedMinimizedApps.indexOf(component) > -1) {\n      for (let i = updatedMinimizedApps.length - 1; i >= 0; i -= 1) {\n        if (updatedMinimizedApps[i] === component) {\n          updatedMinimizedApps.splice(i, 1);\n        }\n      }\n    }\n\n    setOpenApps([...openApps, component]);\n    setMinimizedApps(updatedMinimizedApps);\n\n    updateActiveApp(null, component);\n    start('close');\n  };\n\n  const closeApp = (e, component) => {\n    if (e) e.preventDefault();\n\n    setOpenApps(openApps.filter((a) => a !== component));\n  };\n\n  const updateStartbar = (component, minimizeWindow) => {\n    const updatedMinimizedApps = [...minimizedApps];\n    if (minimizeWindow) {\n      // if we manually ask to minimize\n      updatedMinimizedApps.push(component);\n    } else if (updatedMinimizedApps.indexOf(component) > -1) {\n      // if app is currently minimized and needs to be brought back\n      const index = updatedMinimizedApps.indexOf(component);\n      updatedMinimizedApps.splice(index, 1);\n\n      updateActiveApp(null, component);\n    } else {\n      // Otherwise, let's just set to currently active app\n      updateActiveApp(null, component);\n    }\n\n    setMinimizedApps(updatedMinimizedApps);\n    start('close');\n  };\n\n  const triggerShutdown = (e, restart = false) => {\n    if (e) e.preventDefault();\n\n    setShutDown(!restart);\n    setOpenStart(false);\n    setOpenApps([]);\n    setMinimizedApps([]);\n    setCurrentlyActiveApp('');\n    setPreviouslyActiveApp('');\n  };\n\n  const changeSystemSettings = (background = null, theme = null) => {\n    if (background) localStorage.setItem('background', background.name);\n\n    if (theme) localStorage.setItem('theme', theme);\n\n    setSystemSettings({\n      background: background || systemSettings.background,\n      theme: theme || systemSettings.theme,\n    });\n  };\n\n  return (\n    <section className={`desktop theme-${systemSettings.theme.toLowerCase()}`} style={{ backgroundImage: `url(${systemSettings.background.url})` }}>\n      <div className=\"icons\">\n        <button type=\"button\" onClick={(e) => openApp(e, apps.messenger.toLowerCase())}>\n          <img\n            src={icons[apps.messenger.toLowerCase()].url}\n            alt={icons[apps.messenger.toLowerCase()].alt}\n          />\n          {' '}\n          {apps.messenger}\n        </button>\n        <button type=\"button\" onClick={(e) => openApp(e, apps.contact.toLowerCase())}>\n          <img\n            src={icons[apps.contact.toLowerCase()].url}\n            alt={icons[apps.contact.toLowerCase()].alt}\n          />\n          {' '}\n          {apps.contact}\n        </button>\n        <button type=\"button\" onClick={(e) => openApp(e, apps.work.toLowerCase())}>\n          <img src={icons[apps.work.toLowerCase()].url} alt={icons[apps.work.toLowerCase()].alt} />\n          {' '}\n          {apps.work}\n        </button>\n        <a href={resumeLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={resume} alt=\"Icon of resume\" />\n          {' '}\n          Resume\n        </a>\n      </div>\n\n      {\n        Object.keys(programComponents).map((program) => {\n          if (\n            openApps.indexOf(program) === -1\n            && minimizedApps.indexOf(program) === -1\n          ) return null;\n\n          const ProgramBlock = programComponents[program];\n\n          return (\n            <ProgramBlock\n              key={`program-${program}`}\n              updateActiveApp={updateActiveApp}\n              closeApp={closeApp}\n              updateStartbar={updateStartbar}\n              openApps={openApps}\n              minimizedApps={minimizedApps}\n              currentlyActiveApp={currentlyActiveApp}\n              previouslyActiveApp={previouslyActiveApp}\n              activeSystemSettings={systemSettings}\n              changeSystemSettings={changeSystemSettings}\n            />\n          );\n        })\n      }\n\n      <StartBar\n        updateActiveApp={updateActiveApp}\n        currentlyActiveApp={currentlyActiveApp}\n        openApps={openApps}\n        minimizedApps={minimizedApps}\n        shutDown={triggerShutdown}\n        updateStartbar={updateStartbar}\n        start={start}\n        openStart={openStart}\n        openSettings={(e) => openApp(e, apps.settings.toLowerCase())}\n      />\n\n      <div className={`shutDownPage ${shutDown ? 'visible' : ''}`}>\n        <ShutDown restart={() => triggerShutdown(null, true)} />\n      </div>\n\n      <Screensaver />\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}